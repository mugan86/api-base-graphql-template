# Comments in GraphQL strings (such as this one) start with the hash (#) symbol.

"""
Queries operations => GET (REST).
"""
type Query {
    "Saludo inicial"
    hello: String!
    "Saludo inicial con nombre dinámico"
    helloWithName(name: String): String!
    """
    Obtenemos las ubicaciones aleatorias de un rectángulo acotado en coordenadas
    especificando el punto del noreste y el punto de suroeste. 
    Podríamos especificar las otras dos esquinas, pero tendría que ser:
    Noroeste / Sureste. Hay que respetar eso para acotar una zona correctamente. 
    Por defecto, está asignado a la zona de Madrid:
    * northEast: LocationInput = {lat: 42.2870876, lng: 3.2725862}, 
    * southWest: LocationInput = { lat: 37.2709008, lng: -6.9571999}
    """
    randomLocation( pointsTotal: Int = 1, northEast: LocationInput = {lat: 42.2870876, lng: 3.2725862}, southWest: LocationInput = { lat: 37.2709008, lng: -6.9571999}): [Location]
    "Obtenemos el total de usuarios almacenado en el fichero"
    countUsers: Int!
    "Obtenemos los usuarios en bloques de 20 usuarios por defecto mediante paginación"
    users (page: Int = 1, itemsPerPage: Int = 20): Result
    """
    Obtenemos el usuario usando el filtro para dar el usuario seleccionado.
    Deshabilitaré, para que de el error que está añadido 
    en resolvers, pero no en el schema
    Error: Query.user defined in resolvers, but not in schema
    """
    user (id: Int!): Result!
}

"""
Mutation operations (Modify info) => POST, PUT, PATCH, DELETE (REST).
"""
type Mutation {
    connect(id: Int!): Boolean
    disconnect(id: Int!): Boolean
}

# User general info
type User {
    # ID asignado al usuario
    id: Int!
    # Nombre de pila
    name: String!
    # Apellidos
    lastname: String!
    # Correo electrónico
    email: String!
    # Imagen del perfil
    avatar: String!
}

type Result {
    status: Boolean!
    message: String!
    list: [User]
    item: User
}

# ## 
type Location {
    lat: Float
    lng: Float
}

input LocationInput { 
    lat: Float
    lng: Float
}
